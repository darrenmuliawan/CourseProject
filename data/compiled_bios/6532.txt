 David Brumley | Carnegie Mellon University - Computer Science Department Skip to main content Menu Toggle menu visibility Staff Faculty Current Students Prospective Students Menu Toggle menu visibility Academics Directory Research About News Events Search Toggle search visibility Search form Search David Brumley Office: 2202 Collaborative Innovation Center Email: dbrumley@cs.cmu.edu Phone: (412) 268-3851 Department:Electrical & Computer Engineering Computer Science DepartmentCylab Research Interests: CryptographyFormal MethodsSecurity and PrivacySystems My primary research area is software security techniques that give users guarantees. My research is at the intersection of model checking, formal methods, compilers, and logic, all of which are applied to security problems. Some of the central techniques that we are developing in order to accomplish our goals include efficient symbolic execution, reasoning about bit-level arithmetic in finite fields, sound decompilation, and decision procedures. I also work in other areas of computer security, such as network security and applied cryptography. In these areas, we look at efficient protocols, efficient signature schemes, and privacy-preserving cryptography. Current questions we are working on include can we automatically generate exploits? Can we automatically develop recognizers for exploits of a particular vulnerability? What are the limits of reverse engineering? Can we show that Microsoft implements RSA correctly, and that they aren't stealing our secrets? Can we show a crypto algorithm doesn't leak secrets via side-channels? What do we need to change to keep software patches from breaking systems? How do things change in critical systems, e.g., securing an MRI machine in a hospital? Would you want to be the first to get an MRI after a software update? In our setting, we typically assume the software in these settings is only available in binary (i.e., executable) form. Binary code analysis is attractive for several reasons. First, binary-level code analysis allows us to argue about the security of the code that actually executes, not just what was compiled. Second, everyone has access to the programs they run in binary form, thus binary-only techniques promise to be widely applicable. Finally, a binary program is a program in the most basic and primitive form. If we can reason about security concerns at the binary level, we can faithfully reason about software security problems in any language. Search Terms Find Graduate Advisors by Name - Advisors - Acar, Umut Aldrich, Jonathan Amvrosiadis, George Andersen, David Balcan, Nina Beckmann, Nathan Blelloch, Guy Brookes, Stephen Brumley, David Chen, Tianqi Crane, Keenan Crary, Karl Datta, Anupam Erdmann, Michael Faloutsos, Christos Fanti, Giulia Fredrikson, Matt Frieze, Alan Ganger, Greg Garlan, David Gibbons, Phillip Gligor, Virgil Goldstein, Seth Goyal, Vipul Gupta, Anupam Guruswami, Venkatesan Haeupler, Bernhard Harchol-Balter, Mor Harper, Robert Heule, Marijn Hodgins, Jessica Hoffmann, Jan Jia, Limin Kanade, Takeo Kolter, J. Zico Kothari, Pravesh Kumar, Swarun Lee, Tai-Sing Levin, Golan Lucia, Brandon Mason, Matthew Maxion, Roy Miller, Heather Miller, Gary Mitchell, Tom Mowry, Todd O'Donnell, Ryan O'Hallaron, David O'Toole, Matthew Parno, Bryan Pavlo, Andy Pfenning, Frank Platzer, Andr Pollard, Nancy Ravi, R. Reddy, Raj Rudich, Steven Sandholm, Tuomas Satyanarayanan, Mahadev Schwartz, Russell Sekar, Vyas Seshan, Srinivasan Shah, Nihar Shaw, Mary Sherry, Justine Shi, Elaine Siewiorek, Daniel Simmons, Reid Sleator, Daniel Steenkiste, Peter Touretzky, David Vinayak, Rashmi Korlakai Wang, Weina Woodruff, David Xing, Eric P. Yang, Yiming List Faculty by Research Interest Artificial Intelligence-Computational Neuroscience-Robotics-Machine Learning-Planning, Knowledge Representation and Game Theory-Technology and Society-Vision, Speech and Natural LanguagesSecurity-Cryptography-Security and PrivacyGraphics-Animation-VisionProgramming Languages-Formal Methods-Pure and Applied Logic-Software Engineering-Software Verification-Type TheorySystems-Computer Architecture-Databases-Data-Intensive and Cloud Computing-Distributed Systems-Human-Computer Interaction-Mobile and Pervasive Computing-Networking-Operating Systems-Scientific ComputingTheory-Algorithms and Complexity-Computational Biology-Game Theory-Performance Modeling & Analysis Computer Science Department Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213 Phone: 412-268-2565 Fax: 412-268-5576  Pittsburgh Campus Qatar Campus Legal Info 