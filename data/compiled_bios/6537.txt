 Karl Crary | Carnegie Mellon University - Computer Science Department Skip to main content Menu Toggle menu visibility Staff Faculty Current Students Prospective Students Menu Toggle menu visibility Academics Directory Research About News Events Search Toggle search visibility Search form Search Karl Crary Associate Professor Office: 9217 Gates & Hillman Centers Email: crary@cs.cmu.edu Phone: (412) 268-7687 Department:Computer Science Department Web site:http://www.cs.cmu.edu/~crary Administrative Support Person: Benjamin Cook Research Interests: Programming LanguagesSecurity and Privacy My research interests are in the design and implementation of advanced programming languages and in applying programming language technology to improve the development, maintenance, and performance of software systems. I am particularly interested in the application of types to the structure and implementation of programming languages and software systems. One current focus of my research is on mechanized metatheory. The aim of mechanized metatheory is to give proof of the properties of programming languages (for example, the type safety property says that no well-typed program can crash or otherwise violate its interface) in a form that can be checked by a computer. Not only does this give us greater confidence of the correctness of our proofs, but it also makes it possible for the proof itself to become part of a software system. For example, we can use mechanized metatheory to provide a form of certified code. By equipping a program with a proof of type safety for the language it is provided in (this may be a source or executable language), we make it possible to determine the safety of the program automatically, simply by checking the proof and type-checking the program. Thus it is feasible to check the safety of programs in a purely automated fashion. Another current focus of my research is on the application of certified code to operating systems. Using certified code, we can replace the dynamic protection checks that are ubiquitous in systems today with purely static ones. Since dynamic checks can be unreliable and costly, this can improve the reliability and performance of software systems. Moreover, static checks have greater expressive power than dynamic checks, so they can offer a greater level of protection and security than existing means. Search Terms Find Graduate Advisors by Name - Advisors - Acar, Umut Aldrich, Jonathan Amvrosiadis, George Andersen, David Balcan, Nina Beckmann, Nathan Blelloch, Guy Brookes, Stephen Brumley, David Chen, Tianqi Crane, Keenan Crary, Karl Datta, Anupam Erdmann, Michael Faloutsos, Christos Fanti, Giulia Fredrikson, Matt Frieze, Alan Ganger, Greg Garlan, David Gibbons, Phillip Gligor, Virgil Goldstein, Seth Goyal, Vipul Gupta, Anupam Guruswami, Venkatesan Haeupler, Bernhard Harchol-Balter, Mor Harper, Robert Heule, Marijn Hodgins, Jessica Hoffmann, Jan Jia, Limin Kanade, Takeo Kolter, J. Zico Kothari, Pravesh Kumar, Swarun Lee, Tai-Sing Levin, Golan Lucia, Brandon Mason, Matthew Maxion, Roy Miller, Heather Miller, Gary Mitchell, Tom Mowry, Todd O'Donnell, Ryan O'Hallaron, David O'Toole, Matthew Parno, Bryan Pavlo, Andy Pfenning, Frank Platzer, Andr Pollard, Nancy Ravi, R. Reddy, Raj Rudich, Steven Sandholm, Tuomas Satyanarayanan, Mahadev Schwartz, Russell Sekar, Vyas Seshan, Srinivasan Shah, Nihar Shaw, Mary Sherry, Justine Shi, Elaine Siewiorek, Daniel Simmons, Reid Sleator, Daniel Steenkiste, Peter Touretzky, David Vinayak, Rashmi Korlakai Wang, Weina Woodruff, David Xing, Eric P. Yang, Yiming List Faculty by Research Interest Artificial Intelligence-Computational Neuroscience-Robotics-Machine Learning-Planning, Knowledge Representation and Game Theory-Technology and Society-Vision, Speech and Natural LanguagesSecurity-Cryptography-Security and PrivacyGraphics-Animation-VisionProgramming Languages-Formal Methods-Pure and Applied Logic-Software Engineering-Software Verification-Type TheorySystems-Computer Architecture-Databases-Data-Intensive and Cloud Computing-Distributed Systems-Human-Computer Interaction-Mobile and Pervasive Computing-Networking-Operating Systems-Scientific ComputingTheory-Algorithms and Complexity-Computational Biology-Game Theory-Performance Modeling & Analysis Computer Science Department Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA 15213 Phone: 412-268-2565 Fax: 412-268-5576  Pittsburgh Campus Qatar Campus Legal Info 